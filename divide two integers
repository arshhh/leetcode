class Solution {
public:
    int divide(int dividend, int divisor) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
    if(dividend==0)
        return 0;
        bool negative=false;
    if( (dividend<0 && divisor >0) || (dividend>0 && divisor<0) )
		negative=true;
    //overflow
    long long long_dividend=abs((long long)dividend);
    long long long_divisor=abs((long long)divisor);


	if(long_divisor==1)
		return negative ? -long_dividend : long_dividend;
  

    int res=0;
	while(long_dividend>=long_divisor){
    	long long tmp=long_divisor;
        int shift=0;
		while(long_dividend>=tmp){
			shift++;
			tmp=tmp<<1;
		}
		 shift--;
		 tmp=tmp>>1;
		 
		 if(shift>0){
		 	res += (1<<shift);
		 long_dividend -= (tmp);
		 }else{
		 	break;
		 }
	}
    
	 if(long_dividend>=long_divisor){
		 res++;
    	}
	return negative ? -res : res;
    }
};


/* this version exceeds time limit */

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(head==NULL)
            return head;
        ListNode* dummy=new ListNode(-1);
        dummy->next=head;
        ListNode* preM;
        ListNode* pre=dummy;
        //head is the cursor, the head is the i-th element in the list
        for(int i=1;i<=n;i++){
            if(i==m)
                preM=pre;
            if(i>m){
               pre->next=head->next;
               head->next=preM->next;
               preM->next=head;
               head=pre; 
            }
            pre=head;
            head=head->next;
        }
        head=dummy->next;
        delete dummy;
        return head;
    }
};


/* this version exceeds time limit */

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
    
	//pre_head is the m-1-th node
	ListNode* pre_start=NULL;
	int i=m-1;
    	if(i>0){
    		pre_start = head;
    		i--;
    		while(i>0){
    			pre_start = pre_start->next;
    			i--;
    		}
    	}
    	ListNode* pre_head = NULL;
    	ListNode* new_head = head;
    	if(pre_start!=NULL)
    		new_head = pre_start->next;
    	ListNode* start = new_head;

	int length = n-m+1;
	while(length>0){
		ListNode* next = new_head->next;
		new_head->next = pre_head;
		pre_head = new_head;
		new_head = next;
		length--;
	}
	//
	start->next = new_head;
	if(pre_start==NULL){
		return pre_head;
	}else{
		pre_start->next = pre_head;
		return head;
	}
};


/* 

This algorithm is a little like the longgest common string one.

*/


class Solution {
public:
    int isRepeat(string s,int i,int j,char c){
		int size = j-i+1;
		for(int k=i;k<=j;k++){
			if(s[k]==c)
				return k;		
		}
		return -1;	
	}
    int lengthOfLongestSubstring(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
	int size = s.size();
	if(size < 2)
		return size;
	int length = 1;
        	int i=0;
	for(int j=1;j<size;j++){
		int val = isRepeat(s,i,j-1,s[j]);
		if(val > -1){
			length = length > j-i ? length : j-i;
			i = val+1;
		}
		else{
			length = length > j-i+1 ? length : j-i+1;
		}
	}
	
return length;
    }
};


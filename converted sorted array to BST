/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:

    TreeNode *sortedArrayToBST(vector<int> &num, int bIndex, int eIndex){
    	if(bIndex>eIndex)
    		return NULL;
    
	int rootIndex = (bIndex+eIndex)/2;
	TreeNode* root = new TreeNode(num[rootIndex]);
	TreeNode* left = sortedArrayToBST(num,bIndex,rootIndex-1);
	TreeNode* right = sortedArrayToBST(num,rootIndex+1,eIndex);
	root->left = left;
	root->right=right;
	return root;
	}
    TreeNode *sortedArrayToBST(vector<int> &num) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
	 int length = num.size();
	if(length == 0)
		return NULL;
	return sortedArrayToBST(num,0,length-1);
    }
};


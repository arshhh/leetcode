class Solution {
public:
    int findMinIndex(int* count,vector<int>& ratings){
        int index=-1;
        int min=0;
        int n=ratings.size();
        for(int i=0;i<n;i++){
            if(count[i]==0){
                index=i;
                bool left_great=false;
                bool right_great=false;
                if(i-1<0 || ratings[i]<=ratings[i-1])
                    left_great=true;
                if(i+1>=n || ratings[i]<=ratings[i+1])
                    right_great=true;
                if(left_great && right_great){
                     count[index]=1;
                     break;
                }
            }
        }
        return index;
    }
    int sum(int* count,int n){
        int res=0;
        for(int i=0;i<n;i++)
            res += count[i];
        return res;
        
    }
    int candy(vector<int> &ratings) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        int n=ratings.size();
        int *count=new int[n]();
        while(true){
            int min_index=findMinIndex(count,ratings);
            if(min_index==-1)
                break;
            //expand to left
            for(int j=min_index-1;j>-1;j--){
                    // if(count[j]!=0)
                    //     break;
                    if(ratings[j]>ratings[j+1] && count[j+1]+1>count[j])
                        count[j]=count[j+1]+1;
                    else
                        break;
    
            }
            //exapnd to right
            for(int j=min_index+1;j<n;j++){
                    // if(count[j]!=0)
                    //     break;
                    if(ratings[j]>ratings[j-1] && count[j-1]+1>count[j])
                        count[j]=count[j-1]+1;
                    else
                        break;
            }
        }//while
        return sum(count,n);
        // 2 1 2 3 1 
        // 1 2 3 4 2 1 
    }
};

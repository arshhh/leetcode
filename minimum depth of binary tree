/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(root == NULL)
    return 0;
           queue<TreeNode*> v;
	int depth = 1;
      	v.push(root);
      	int lev1=1;
      	int lev2=0;
	while(!v.empty()){
		
		
		TreeNode* node = v.front();
        v.pop();
		lev1--;
		//it's a leaf
		if(node->left==NULL && node->right == NULL)
			return depth;
		else{
			if(node->left!=NULL){
				v.push(node->left);
				lev2++;
			}
			if(node->right!=NULL){
				v.push(node->right);
				lev2++;
			}
		}
		if(lev1==0){
			depth++;
			lev1=lev2;
			lev2=0;
		}
	}
	return depth;
    }
};


/* The logic is very usrful */

class Solution {
public:
    int minDistance(string word1, string word2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
          int n1=word1.size();
	int n2=word2.size();
	if(n1==0 || n2==0)
		return std::abs(n1-n2);
	//d[i][j] means the distance between word1[0..i-1] and word2[0..j-1]
	int d[n1+1][n2+1];
	
	for(int i=0;i<n1+1;i++){
		for(int j=0;j<n2+1;j++){
			if(i==0 || j==0){
				d[i][j]=i+j;
			}else{//    i>=1 && j>=1
				//replace last char
				if(word1[i-1]==word2[j-1]){
                   d[i][j]=d[i-1][j-1];
				}
				else{
                  d[i][j]=d[i-1][j-1]+1;
                         
				}
				//second, delete the last word in j-1
				d[i][j]=min(d[i][j],d[i][j-1]+1);
				d[i][j]=min(d[i][j],d[i-1][j]+1);
			}
		}
    }
return d[n1][n2];	

	
    }
};


class Solution {
public:
    void getInfo(int& unmatched,int count[],int needed[],string T){
        int n=T.size();

    }
    string minWindow(string S, string T) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        int n1=S.size();
        int n2=T.size();
        if(n1<n2 || n2==0)
            return "";
        int total=0; // the  distinct characters in T
        int hasFound[256]={0}; 
        int needed[256]={0}; //the need characters in T
        for(int i=0;i<n2;i++){
            if(needed[T[i]]==0){
                total++;
            }
            needed[T[i]]++;
        }       
        int begin=0;//start position of the sliding window
        int end=0; //the inclusive end of the sliding window
        int len=INT_MAX;
        string result="";
        
        for(end=0;end<n1;end++){
            hasFound[S[end]]++;
            if(hasFound[S[end]]==needed[S[end]]){
                total--;
            }
            //try to move start
            while(begin<=end && hasFound[S[begin]]>needed[S[begin]]){
                hasFound[S[begin]]--;
                begin++;
            }
            if(total==0){
                if(end-begin+1<len){
                    len=end-begin+1;
                    result=S.substr(begin,len);
                }
            }
        }//for
        return result;
    }
};

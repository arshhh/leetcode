class Solution {
public:
    void permute(vector<vector<int> >& result,vector<int> num,int p){
        if(p==num.size()-1){
            result.push_back(num);
            return;
        }
        permute(result,num,p+1);
        set<int> s;
        for(int i=p+1;i<num.size();i++){
            if(num[i]!=num[p] && s.find(num[i])==s.end() ){
                swap(num[p],num[i]);
                permute(result,num,p+1);
                swap(num[p],num[i]);
                s.insert(num[i]);
            }
        }
    }
    vector<vector<int> > permuteUnique(vector<int> &num) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        vector<vector<int> > result;
        permute(result,num,0);
        return result;
    }
};

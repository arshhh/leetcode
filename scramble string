class Solution {
public:
    bool isScramble(string s1, string s2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        //three dimension dynamic programming
        int n=s1.size();
        if(n!=s2.size())
            return false;
        //valid[i][j][k] means S1[i...i+k-1] s2[j...j+k-1] can be scrambled
        //valid[0][0][n] is what we want
        //valid[i][j][k] is scrambled if there is valid between (i,,,j) 
        bool valid[n][n][n];
    
        //start from length 1
        for(int length=1;length<=n;length++){
        	for(int i=0;i<n;i++){
        		for(int j=0;j<n;j++){
        			if(length==1){
        				if(s1[i]==s2[j])
        					valid[i][j][1]=true;
        				else
        					valid[i][j][1]=false;
        			
        			}else{
        				if(i+length>n || j+length>n)
        					valid[i][j][length]=false;
        				else{
        				  for(int l=1;l<length;l++){
        					
        					if( (valid[i][j][l]&&valid[i+l][j+l][length-l]) ||
        						(valid[i][j+length-l][l] && valid[i+l][j][length-l]) ){
        						valid[i][j][length]=true;
                                break;
        					}        
        				    
        				    valid[i][j][length]=false;
        				    }
        				}
        		
        			}
        		
        		
        		}
        	
        	}
        
        
        }//for
        
        return valid[0][0][n];
	 
       
    }
};

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(l1==NULL && l2==NULL)
    return NULL;
ListNode* head = new ListNode(0);
ListNode* tmp = head;
ListNode* previous = NULL;
int carry = 0;
	while(l1!=NULL || l2!=NULL || carry!=0){
		int val1=0;
		int val2=0;
		if(l1!=NULL){
			val1=l1->val;
			l1=l1->next;
		}
		if(l2!=NULL){
			val2=l2->val;
			l2=l2->next;
		}
		tmp->val = val1+val2+carry;
		if(tmp->val>9){
			tmp->val -= 10;
			carry = 1;
		}
		else{
			carry = 0;
		}
		if(previous!=NULL){
			previous->next = tmp;
		}
		previous = tmp;
		tmp = new ListNode(0);
	}
return head;
    }
};


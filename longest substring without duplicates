/* 

This algorithm is a little like the longgest common string one.

*/


class Solution {
public:

    int lengthOfLongestSubstring(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
	int size = s.size();
	if(size < 2)
		return size;
	int length = 0;
    int i=0;
    int t[26]={-1};
    //test string endding at index j 
	for(int j=0;j<size;j++){
        //test if repeated, -1 means it doesn't appear in it
        int k=t[s[j]-'a'];
        if(k==-1){
            t[s[j]-'a']=j;
            continue;
        }
        //update length
        length=length > j-k ? length : j-k;
        while(i<=k){
            t[s[i]-'a']=-1;
            i++;
        }
	}
	
    length = max(length,size-i);
    return length;
    }
};


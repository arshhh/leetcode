class Solution {
public:
void init(bool* t,int n){
	for(int i=0;i<n;i++)
		t[i]=true;
}
    int largestRectangleArea(vector<int> &height) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int size = height.size();
	if(size==0)
		return 0;
	if(size==1)
		return height[0];
	//begin and end arraies indicate whether an item is a valid candidate for begin or end of the maximum rectangle
	bool* begin = new bool[size];
	bool* end = new bool[size];
	init(begin,size);
	init(end,size);
	int max=0;
	int w = 0 ;
	int h =0;
	for(int i=1;i<size;i++){
		if(height[i]<=height[i-1])
			begin[i]=false;
	}
	for(int j=size-2;j>-1;j--){
		if(height[j]<=height[j+1])
			end[j]=false;
	}
	for(int i=0;i<size;i++){
		if(!begin[i])		
			continue;
		h=height[i];
		w=1;
		max = h*w;
		for(int j=i+1;j<size;j++){
			if(height[j]<h)
				h=height[j];
			w++;
			if(!end[j])
				continue;
			else{
				if(h> ((float)max/w) )
					max = w*h;
			}
		}//inner for
	}//outer for
	return max;
    }
};



//the array can contain duplicate elements

class Solution {
public:
    int firstMissingPositive(int A[], int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(n==0)
          return 1;
        int max=0;
        int min=numeric_limits<int>::max();
        int sum=0;
        unordered_set<int> set;
        unordered_set<int>::iterator iter;
        for(int i=0;i<n;i++){
          if(A[i]>0){
            //detect duplicates
            iter=set.find(A[i]);
            if(iter!=set.end())
              continue;        
            set.insert(A[i]);
         
            max = max > A[i] ? max : A[i];
       
          }       
        }
         if(max==0)
          return 1;
        for(int i=1;i<=max;i++){
            iter=set.find(i);
            if(iter==set.end())
                return i;
        }
        
        return max+1;

    }
};

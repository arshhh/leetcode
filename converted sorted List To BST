/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int getLength(ListNode* head){
		int length = 0;
		ListNode* tmp = head;
		while(tmp!=NULL){
			length++;
			tmp=tmp->next;
		}
		return length;
	}	
TreeNode* sortedListToBST(ListNode* &head,int s,int e){
	int mid=(s+e)/2;
	if(s>e)
		return NULL;
	TreeNode* left=sortedListToBST(head,s,mid-1);
	TreeNode* parent=new TreeNode(head->val);
    parent->left=left;
	head=head->next;
	TreeNode* right=sortedListToBST(head,mid+1,e);
	parent->right=right;
	return parent;
}
    TreeNode *sortedListToBST(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n=getLength(head);
	if(n==0)
		return NULL;
	return sortedListToBST(head,0,n-1);
    }
};


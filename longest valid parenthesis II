class Solution {
public:
    int longestValidParentheses(string s) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        int size=s.size();
        //-1 presents ( in the stack
        vector<int> status;
        int m=0;
        for(int i=0;i<size;i++){
            if(s[i]=='(')
                status.push_back(-1);
            else{
                if(status.empty())
                    continue;
                if(status.back()==-1){
                    status.pop_back();
                    m=max(m,2);
                    status.push_back(2);
                }else{
                    if(status.size()==1){
                        status.pop_back();
                        continue;
                    }
                    int num=status.back();
                    status.pop_back();
                    status.pop_back();
                    m=max(m,num+2);
                    status.push_back(num+2);
                }
                //integrate the vector
                while(status.size()>1 && status[status.size()-2]!=-1){
                    int num1=status.back();
                    status.pop_back();
                    int num2=status.back();
                    status.pop_back();
                    int num=num1+num2;
                    m=max(m,num);
                    status.push_back(num);
                }
            }
        }
        return m;
    }
};

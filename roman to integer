class Solution {
public:
    int romanToInt(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        unordered_map<char,int> map;
    map.insert(pair<char,int>('I',1));
	map.insert(pair<char,int>('V',5));
map.insert(pair<char,int>('X',10));
map.insert(pair<char,int>('L',50));
map.insert(pair<char,int>('C',100));
map.insert(pair<char,int>('D',500));
map.insert(pair<char,int>('M',1000));
int res=0;
int n=s.size();
	for(int i=0;i<n;i++){
		int v=map.find(s[i])->second;
		if(i!=n-1){
			if( (s[i]=='I' && (s[i+1]=='V' || s[i+1]=='X')) ||
				(s[i]=='X' &&(s[i+1]=='L' || s[i+1]=='C')) ||
				(s[i]=='C' && (s[i+1]=='D'|| s[i+1]=='M')) )
				v=-v;	
		}
		res+=v;
	}
	return res;
    }
};


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(l1==NULL)
          return l2;
        if(l2==NULL)
          return l1;
        ListNode *p1=l1;
        ListNode *p2=l2;
        ListNode *head=p1->val<=p2->val ? p1 : p2;
        while(p1!=NULL && p2!=NULL){
          if(p1->val<=p2->val){
            //stop if p1->next->val>p2->val
            while(p1->next!=NULL && p1->next->val<=p2->val)
              p1=p1->next;
            ListNode *tmp=p1;
            p1=p1->next;
            tmp->next=p2;
          }else{
            //stop if p2->next->val>p1->val
            while(p2->next!=NULL && p2->next->val<=p1->val)
              p2=p2->next;
            ListNode *tmp=p2;
            p2=p2->next;
            tmp->next=p1;
          }
        }
        return head;
    }
};

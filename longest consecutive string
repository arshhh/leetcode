#include<map>

class Solution {
public:
    int longestConsecutive(vector<int> &num) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        unordered_map<int,int> map;
    	 for(int i=0;i<num.size();i++){
			map.insert(pair<int,int>(num[i],1)); 
		}
		unordered_map<int,int>::iterator iter,tmp;
		int m=1;
		for(iter=map.begin();iter!=map.end();iter++){
			pair<int,int> val = *iter;
			//has been visited
			if(val.second==-1)
				continue;
			int lo=val.first;
			int hi=lo;
			while(true){
				tmp = map.find(lo-1);
				if(tmp==map.end())
					break;
				tmp->second=-1;
			    lo=lo-1;
			}
			while(true){
				tmp=map.find(hi+1);
				if(tmp==map.end())
					break;
				tmp->second=-1;
			    hi=hi+1;
			}
			m=max(m,hi-lo+1);
			
		}//for
		return m;
    }
};

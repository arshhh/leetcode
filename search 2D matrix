/* pay attention to the arange condition. 
*/

class Solution {
public:
    bool searchMatrix(vector<vector<int> > &matrix, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
            int rows=matrix.size();
	if(rows==0)
		return false;
	int cols=matrix[0].size();
	if(cols==0)
		return false;
	//find the row whose first number is the maximum number which is smaller than //target
	int low=0;
	int high=rows-1;
	int r=-1;
	while(low<=high){
		int mid=(low+high)/2;
		if(matrix[mid][0]==target)
			return true;
		else if(matrix[mid][0]>target){
			high=mid-1;
		}else{
			if(mid+1<rows){
                if(matrix[mid+1][0]>target){
			    	r=mid;
			    	break;
                }else{
                    low=mid+1;
                }
			}else{
                r=mid;
                break;
			}		
		}
	}//while
	if(r==-1)
		return false;
	low=0;
	high=cols-1;
	while(low<=high){
		int mid=(low+high)/2;
		if(matrix[r][mid]==target)
			return true;
		else if(matrix[r][mid]>target){
			high=mid-1;
		}else{
	
			low=mid+1;
		}


	}
	return false;
    }
};


/* 

can't pass the large tests

*/


class Solution {
public:

    bool isPalindrome(string s,int i, int j){
    	while(j>i){
			if(s[j] == s[i]){
				i++;
				j--;
			}
else{
				return false;
}	
		}
		return true;
	}

    string longestPalindrome(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n = s.size();
        if(n==0 || n==1)
        	return s;
        int len=1;
        string res=s.substr(0,1);
	//single center
	for(int i=0;i<n;i++){
		for(int j=i-1,k=i+1;j>-1 && k<n;j--,k++){
			if(s[j]==s[k]){
				int tmp=(j-i)*2+1;
				if(tmp>len){
					len=tmp;
					res=s.substr(j,len);
				}//if
			}//if
			else{
				break;
			}
		}
	}
	//center with two characters, i and i+1 are the centers
	for(int i=0;i<n-1;i++){
		if(s[i]!=s[i+1])
			continue;
		for(int j=i-1,k=i+2;j>-1 && k<n;j--,k++){
			if(s[j]==s[k]){
				int tmp=(j-i)*2+2;
				if(tmp>len){
					len=tmp;
					res=s.substr(j,len);
				
				}else{
					break;
				}
			}
		
		}
	
	}//for
		
	return res;
    }
};


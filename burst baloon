class Solution {
public:
    int maxCoins(vector<int>& nums) {
        if(nums.size() == 0)
            return 0;
        vector<vector<int>> dp(nums.size(), vector<int>(nums.size(),0));
        for(int len=1; len <= nums.size(); len++) {
            // starting point
            for(int i=0; i+len-1 < nums.size(); i++) {
                int j = i+ len -1;
                int m = 0;
                // pick up k, which is the last baloon to shot
                for(int k=i; k<=j; k++) {
                    m = std::max( ((k-1>=i? dp[i][k-1]:0) + (i-1>-1 ? nums[i-1] :1)*nums[k]*(j+1<nums.size() ?nums[j+1] : 1) + (k+1<=j ? dp[k+1][j] :0)), m);
                }
                dp[i][j] = m;
            }
        }
        return dp[0][nums.size()-1];
    }
};

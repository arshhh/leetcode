class Solution {
public:
	int getMax(int i,int j){
		return i >j ? i : j;
	}

 int maxProfit(vector<int> &prices) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
    int size = prices.size();
    int profit = 0;
    int startIndex = 0;
    if(size==0)
        return 0;
        //profit1[i] means the max profit from [0,i]
    int* profit1=new int[size]();
	//profit2[i] means the max profit from [i,n-1];
	int* profit2=new int[size]();
	
	//calculate profit1
	int min_tmp=prices[0];
	for(int i=1;i<size;i++){
		if(prices[i]-min_tmp>profit1[i-1])
			profit1[i]=prices[i]-min_tmp;
        else
            profit1[i]=profit1[i-1];
		if(prices[i]<min_tmp)
			min_tmp=prices[i];
	}
	//calculate profit2, [i,n-1]
	int max_tmp=prices[size-1];
	for(int i=size-2;i>-1;i--){
		if(max_tmp-prices[i]>profit2[i+1])
			profit2[i] = max_tmp-prices[i];
        else
            profit2[i] = profit2[i+1];
		if(prices[i]>max_tmp)
			max_tmp=prices[i];
	}
	
	profit=profit1[size-1];
    for(int i=0;i<size-1;i++){
		profit = getMax(profit, profit1[i]+profit2[i+1]);
	}
	return profit;

    }
};

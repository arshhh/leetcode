class Solution {
public:

    bool isInteger(const char *s,int start,int end,bool sign){
		if(start>end)
			return false;
        if(sign  && (s[start]=='-' || s[start]=='+') )
            return isInteger(s,start+1,end,false);
		for(int i=start;i<=end;i++){
			if(s[i]<'0' || s[i]>'9'){
				return false;
			}
		}
		return true;
	}
	bool isFloat(const char *s,int start,int end){
		//if there is a period
		for(int i=start;i<=end;i++){
			if(s[i]=='.'){
				if(isInteger(s,start,i-1,true)){
                    if(isInteger(s,i+1,end,false) || i+1>end  )
					return true;
				}
                //empty interger part
				else if(i==start){
    			    if(isInteger(s,i+1,end,false))
                        return true;
                    else
                        return false;
				}else if(i==start+1 &&(s[i-1]=='+' || s[i-1]=='-')){
    			    if(isInteger(s,i+1,end,false))
                        return true;
                    return false;
				}else
					return false;
			}
		}
        
		return isInteger(s,start,end,true);
	}
	int length(const char *s){
		int len=0;
		while(s[len]!='\0'){
			len++;
		}
		return len;
	}
    bool isNumber(const char *s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        //delete the space in the front and end
	int len=length(s);
	int start=0;
	while(s[start]==' '){
		start++;
	}
	//empty string or string containning only spaces
	if(start==len)
		return false;
	int end=len-1;
	while(s[end]==' '){
		end--;
	}
	//check if there is a e
	for(int i=start;i<=end;i++){
		if(s[i]=='e'){
			if(isFloat(s,start,i-1) && isInteger(s,i+1,end,true) )
				return true;
			else
				return false;
		}
	}

	return isFloat(s,start,end);
    }
};


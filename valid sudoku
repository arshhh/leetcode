class Solution {
public:
    bool checkRow(vector<vector<char> > &board,int row){
        bool used[9];
        for(int i=0;i<9;i++)
            used[i]=false;
        for(int i=0;i<board.size();i++){
            char c=board[row][i];
            if(c!='.'){
                if(used[c-'1'])
                    return false;
                used[c-'1']=true;
            }
        }
        return true;
    }
        bool checkColumn(vector<vector<char> > &board,int col){
        bool used[9];
        for(int i=0;i<9;i++)
            used[i]=false;
        for(int i=0;i<board.size();i++){
            char c=board[i][col];
            if(c!='.'){
                if(used[c-'1'])
                    return false;
                used[c-'1']=true;
            }
        }
        return true;
    }
    bool checkCell(vector<vector<char> > &board,int cell){
        bool used[9];
        for(int i=0;i<9;i++)
            used[i]=false;
        int sr=cell%3*3;
        int sc=cell/3*3;
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                char c=board[sr+i][sc+j];
                if(c!='.'){
                    if(used[c-'1'])
                         return false;
                used[c-'1']=true;
            }
            }
        }
        return true;
    }
    bool isValidSudoku(vector<vector<char> > &board) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        //check rows
        for(int i=0;i<9;i++){
            if(!checkRow(board,i) || !checkColumn(board,i) ||!checkCell(board,i))
                return false;
        }
        return true;
            
    }
};

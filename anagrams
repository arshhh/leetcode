

class Solution {
public:

    bool isAnagram(string a,string b){
        int count[26]={0};
        int n=a.size();
        int n1=b.size();
        if(n!=n1)
            return false;
        
        for(int i=0;i<n;i++){
            int num1=a[i]-'a';
            count[num1]++;
            int num2=b[i]-'a';
            count[num2]--;
        }
        for(int i=0;i<26;i++){
            if(count[i]!=0)
                return false;
            
        }
        return true;      
    }
    vector<string> anagrams(vector<string> &strs) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n=strs.size();
        bool found=false;
        bool* matched=new bool[n]();
        vector<string> res;
        for(int i=0;i<n-1;i++){
            if(matched[i])
                continue;
            for(int j=i+1;j<n;j++){
                    if(!matched[j] && isAnagram(strs[i],strs[j])){
                        matched[j]=true;
                        res.push_back(strs[j]);   
                        found=true;
                    }
                }
                if(found){
                res.push_back(strs[i]);   
                found=false;
                }
            }
                  
        
        return res;
    }
};









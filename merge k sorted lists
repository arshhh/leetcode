/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2){
		ListNode* head=new ListNode(-1);
		ListNode* p=head;
		while(l1 && l2){
			if(l1->val<=l2->val){
				p->next=l1;
				l1=l1->next;
			}
			else{
				p->next=l2;
				l2=l2->next;
			}
			p=p->next;
		}
		if(l1==NULL) 
			p->next=l2;
		if(l2==NULL)
			p->next=l1;
		return head->next;
	}
    ListNode *mergeKLists(vector<ListNode *> &lists) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        //merge two lists each time
	int n=lists.size();
	if(n==0)
		return NULL;
	if(n==1)
		return lists[0];
	ListNode* result=mergeTwoLists(lists[0],lists[1]);
	for(int i=2;i<n;i++)
		result=mergeTwoLists(result,lists[i]);
	return result;
    }
};


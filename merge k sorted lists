/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
private:
    class mycmp{
        public:
        bool operator()(const ListNode* a,const ListNode* b) const{
            return a->val>b->val;
        }
    };
public:
    ListNode *mergeKLists(vector<ListNode *> &lists) {
        ListNode* head=new ListNode(-1);
        ListNode* curr=head;
        priority_queue<ListNode*,vector<ListNode*>,mycmp> queue1;
        for(int i=0;i<lists.size();i++){
            if(lists[i]!=NULL)
                queue1.push(lists[i]);
        }
        while(!queue1.empty()){
            ListNode* tmp=queue1.top();
            queue1.pop();
            curr->next=tmp;
            curr=tmp;
            if(tmp->next){
                queue1.push(tmp->next);
            }
        }
        return head->next;
    }
};

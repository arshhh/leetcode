
class Solution {
public:
    bool isPalindrome(string s,int i, int j){
		while(j>i){
			if(s[j] == s[i]){
				i++;
				j--;
			}
             else{
        	return false;
            }	
		}
		return true;
	}
	void partition(string s,int start,vector<vector<string> > &result,vector<string>& part){
	    if(start==s.size()){
	        
	        result.push_back(part);
	        return;
	        
	    }
	    for(int i=start;i<s.size();i++){
	        if(isPalindrome(s,start,i)){
	            part.push_back(s.substr(start,i-start+1));
	            partition(s,i+1,result,part);
	            part.pop_back();
	        }
	    }
	}
    vector<vector<string>> partition(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
     	 vector<vector<string> > result;
         int size = s.size();
        if(size == 0)
            return result;
        vector<string> part;
        partition(s,0,result,part);
        return result;
    }
};


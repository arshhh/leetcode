/*

This version can't pass the large tests either.

*/


class Solution {
public:
    bool isPalindrome(string s,int i, int j){
    	while(j>i){
			if(s[j] == s[i]){
				i++;
				j--;
			}
else{
	return false;
}	
		}
		return true;
	}
int minCut(string s,int* array,int start){
       	int size = s.size() - start;
	if(size==0)
		return 0;
	int min = size-1;
	if(isPalindrome(s,start,s.size()-1))
		return 0;
	for(int i=start;i<s.size()-1;i++){
		if(isPalindrome(s,start,i)){
			int tmp = 0;
			if(array[i+1]==-1)
                array[i+1] = minCut(s,array,i+1);		
            tmp = 1+array[i+1];		
			min = min < tmp ? min : tmp;
		}
	}	
	return min;	

}
    int minCut(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
	
int size = s.size();
if(size < 2)
return 0;     
int* array = new int[size];
for(int i=0;i<size;i++)
	array[i]=-1;
return minCut(s,array,0);
    }
};


class Solution {
public:

    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        int rows = dungeon.size();
        int cols = dungeon[0].size();
        vector<vector<int>> dp(rows, vector<int>(cols,0));
        
        for(int i= rows-1;i>-1;i--) {
            for(int j= cols-1; j>-1;j--) {
                if(i==rows-1 && j==cols-1) { // Last cell
                   dp[i][j] = dungeon[rows-1][cols-1] > 0 ? 1 : 1 - dungeon[rows-1][cols-1]; 
                } else if (i==rows -1) { // Last Row
                    dp[i][j] = std::max(1, dp[i][j+1] - dungeon[i][j]);
                } else if (j==cols-1) { // Last col
                    dp[i][j] = std::max(1, dp[i+1][j]-dungeon[i][j]);
                } else{
                    dp[i][j] = std::max(1, std::min(dp[i][j+1], dp[i+1][j])-dungeon[i][j]);
                }
            }
        }
        return dp[0][0];
    }
};

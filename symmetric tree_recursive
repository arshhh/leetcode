/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:

    bool isSymmetric(TreeNode* left, TreeNode* right){
		if(left==NULL){
			if(right==NULL)
				return true;
			else
				return false;
		}else{
			if(right==NULL)
				return false;
		}
		//neight of left and right is NULL 
		if(left->val != right->val)
			return false;
		if(isSymmetric(left->right,right->left) && isSymmetric(left->left,right->right))
			return true;
		return false;
		}
    bool isSymmetric(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(root==NULL)
            return true;
        return isSymmetric(root->left,root->right);
    }
};


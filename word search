class Solution {
public:
    bool search(vector<vector<char> > &board,int k, string word,int row,int col,int nRow,int nCol){
		if(k==word.size())
		    return true;
		if(row<0 || row>=nRow || col<0 || col>=nCol || board[row][col]=='0' || word[k]!=board[row][col])
			return false;
		int dx[4]={0,0,1,-1};
		int dy[4]={1,-1,0,0};
		
		char tmp = board[row][col];
		board[row][col]='0';
		for(int i=0;i<4;i++){
		    if(search(board,k+1,word,row+dx[i],col+dy[i],nRow,nCol))
		        return true;
		}
		board[row][col] = tmp;
		return false;
	}
    
    bool exist(vector<vector<char> > &board, string word) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
	if(word.size()==0)
		return true;
    int nRow=board.size();
	if(nRow==0)
		return false;
	int nCol = board[0].size();
	for(int i =0;i<nRow;i++){
		for(int j=0;j<nCol;j++){
			if(search(board,0,word,i,j,nRow,nCol))
				return true;
		}	
    }
return false; 
    }
};


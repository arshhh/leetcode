class Solution {
public:
    //startPos is the position we can add elements from. 
    void getSubset(int startPos,vector<int> set,vector<vector<int> >& result,vector<int> &S){
        result.push_back(set);
        for(int i=startPos;i<S.size();i++){
            if(i==startPos || (i>startPos && S[i]!=S[i-1]) ){
                set.push_back(S[i]);
                getSubset(i+1,set,result,S);
                set.erase(set.end()-1);
            }
        }
    }
    vector<vector<int> > subsetsWithDup(vector<int> &S) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        vector<vector<int> > result;
        vector<int> set;
        sort(S.begin(),S.end());
        getSubset(0,set,result,S);
        return result;
    }
};
